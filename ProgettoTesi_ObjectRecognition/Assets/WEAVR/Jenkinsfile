pipeline {
    agent any
    
    parameters {        
        string(name: 'BRANCH_WEAVR_CODE', defaultValue: 'develop_2019_2_licensefree', description: 'Enter the branch name of WEAVR Code repository to clone')
        string(name: 'BRANCH_WEAVR_DLL', defaultValue: 'develop_2019_2_licensefree', description: 'Enter the branch name of WEAVR DLL repository to push')
        string(name: 'UNITY_HUB_LOCATION', defaultValue: 'C:\\Program Files\\Unity\\Hub', description: 'Enter Unity Hub Location')
        string(name: 'UNITY_VERSION', defaultValue: '2019.2.21f1', description: 'Enter Unity Version')
    }
    environment {
        WEAVR_BUILD = 'WEAVR_Build'
    }
    
    stages {
        
        stage ('Prepare Environment') {
            steps {
                deleteDir()
            }
        }
        
        stage ('Create new Unity3D project') {
            steps {
                echo "Creation of Unity3D project using ${params.UNITY_HUB_LOCATION}\\Editor\\${params.UNITY_VERSION}\\Editor\\Unity.exe"
                bat "\"${params.UNITY_HUB_LOCATION}\\Editor\\${params.UNITY_VERSION}\\Editor\\Unity.exe\" -createProject \"${WORKSPACE}\\Unity3DProject\" -accept-apiupdate -quit -batchmode -logFile \"${WORKSPACE}\\UnityBatch.log\""
                
                echo "Deleting of ScriptAssemblies"
                bat "rem del /f /q /s \"Unity3DProject\\Library\\ScriptAssemblies\""
            }
        }
        
        stage ('WEAVR Code Clone') {
            steps {
                echo "Clone of WEAVR code from ${params.BRANCH_WEAVR_CODE}"
                checkout([$class: 'GitSCM', branches: [[name: '*/' + params.BRANCH_WEAVR_CODE]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CloneOption', depth: 1, noTags: false, reference: '', shallow: true], [$class: 'RelativeTargetDirectory', relativeTargetDir: 'Unity3DProject\\Assets\\WEAVR']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '50990d83-faae-41b0-b48c-d3cc1414828c', url: 'https://tfs.txtgroup.com/tfs/TfsArv/WEAVR/_git/WEAVR']]])
            }
        }
        
        stage ('WEAVR Code Build') {
            steps {
                echo "Build of project Started"
                bat "\"${params.UNITY_HUB_LOCATION}\\Editor\\${params.UNITY_VERSION}\\Editor\\Unity.exe\" -projectPath \"${WORKSPACE}\\Unity3DProject\" -accept-apiupdate -quit -batchmode -logFile \"${WORKSPACE}\\UnityBatch.log\" -executeMethod TXT.WEAVR.Builder.UnityBuild.BuildEditor"
                echo "Build of project Ended"
            }
        }
        
        stage ('WEAVR DLL Encrypt') {
            steps {
                echo "Encrypting Content"
                
                /*
                bat "mkdir \"${WORKSPACE}\\Secured\""
                bat "\"C:\\Program Files (x86)\\Eziriz\\.NET Reactor\\dotNET_Reactor.Console.exe\" -file \"${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Essential\\WeavrEssential.Runtime.dll\" -satellite_assemblies \"${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Essential\\WeavrEssential.Editor.dll;${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Essential\\Player\\Core\\Reflection\\WeavrEssential.Runtime.Reflection.dll;${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Essential\\Player\\Core\\Reflection\\WeavrEssential.Runtime.ReflectionAOT.dll;${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Essential\\Player\\Core\\Reflection\\WeavrEssential.Runtime.ReflectionUWP.dll;${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Extensions\\WeavrExtensions.Common.dll;${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Extensions\\WeavrExtensions.UWP.dll;${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Cockpit\\WeavrCockpit.Runtime.dll;${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Cockpit\\WeavrCockpit.Editor.dll;${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Maintenance\\WeavrMaintenance.Runtime.dll;${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Maintenance\\WeavrMaintenance.Editor.dll;${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Simulation\\WeavrSimulation.Runtime.dll;${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Simulation\\WeavrSimulation.Editor.dll;${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\WeavrPackaging.dll;${params.UNITY_HUB_LOCATION}\\Editor\\${params.UNITY_VERSION}\\Editor\\Data\\Managed\\UnityEngine.dll;${params.UNITY_HUB_LOCATION}\\Editor\\${params.UNITY_VERSION}\\Editor\\Data\\Managed\\UnityEngine\\UnityEngine.CoreModule.dll\" -targetfile \"${WORKSPACE}\\Secured\\<AssemblyFileName>\" -mono 1 -antitamp 1 -anti_debug 1 -necrobit 1 -obfuscation 0 -stringencryption 1 -suppressildasm 1 -naming incremental -exclude_enums 1 -exclude_properties 1 -exclude_fields 1 -exclude_methods 1 -exclude_events 1 -exclude_types 1 -exclude_compiler_types 1 -exclude_serializable_types 1"
                
                echo "Copying Encrypted Content"
                bat "copy /Y \"${WORKSPACE}\\Secured\\WeavrEssential.Runtime.dll\" \"${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Essential\\WeavrEssential.Runtime.dll\" & EXIT /B 0"
                bat "copy /Y \"${WORKSPACE}\\Secured\\WeavrEssential.Editor.dll\" \"${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Essential\\WeavrEssential.Editor.dll\" & EXIT /B 0"
                bat "copy /Y \"${WORKSPACE}\\Secured\\WeavrEssential.Runtime.Reflection.dll\" \"${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Essential\\Player\\Core\\Reflection\\WeavrEssential.Runtime.Reflection.dll\" & EXIT /B 0"
                bat "copy /Y \"${WORKSPACE}\\Secured\\WeavrEssential.Runtime.ReflectionAOT.dll\" \"${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Essential\\Player\\Core\\Reflection\\WeavrEssential.Runtime.ReflectionAOT.dll\" & EXIT /B 0"
                bat "copy /Y \"${WORKSPACE}\\Secured\\WeavrEssential.Runtime.ReflectionUWP.dll\" \"${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Essential\\Player\\Core\\Reflection\\WeavrEssential.Runtime.ReflectionUWP.dll\" & EXIT /B 0"
                bat "copy /Y \"${WORKSPACE}\\Secured\\WeavrExtensions.Common.dll\" \"${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Extensions\\WeavrExtensions.Common.dll\" & EXIT /B 0"
                bat "copy /Y \"${WORKSPACE}\\Secured\\WeavrExtensions.UWP.dll\" \"${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Extensions\\WeavrExtensions.UWP.dll\" & EXIT /B 0"
                bat "copy /Y \"${WORKSPACE}\\Secured\\WeavrCockpit.Runtime.dll\" \"${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Cockpit\\WeavrCockpit.Runtime.dll\" & EXIT /B 0"
                bat "copy /Y \"${WORKSPACE}\\Secured\\WeavrCockpit.Editor.dll\" \"${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Cockpit\\WeavrCockpit.Editor.dll\" & EXIT /B 0"
                bat "copy /Y \"${WORKSPACE}\\Secured\\WeavrMaintenance.Runtime.dll\" \"${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Maintenance\\WeavrMaintenance.Runtime.dll\" & EXIT /B 0"
                bat "copy /Y \"${WORKSPACE}\\Secured\\WeavrMaintenance.Editor.dll\" \"${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Maintenance\\WeavrMaintenance.Editor.dll\" & EXIT /B 0"
                bat "copy /Y \"${WORKSPACE}\\Secured\\WeavrSimulation.Runtime.dll\" \"${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Simulation\\WeavrSimulation.Runtime.dll\" & EXIT /B 0"
                bat "copy /Y \"${WORKSPACE}\\Secured\\WeavrSimulation.Editor.dll\" \"${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\Simulation\\WeavrSimulation.Editor.dll\" & EXIT /B 0"
                bat "copy /Y \"${WORKSPACE}\\Secured\\WeavrPackaging.dll\" \"${WORKSPACE}\\Unity3DProject\\WEAVR_Build\\WeavrPackaging.dll\" & EXIT /B 0"
                
                */
            }
        }
        
        stage ('WEAVR DLL Clone') {
            steps {
                echo "Clone of WEAVR DLL from ${params.BRANCH_WEAVR_DLL}"
                checkout([$class: 'GitSCM', branches: [[name: '*/' + params.BRANCH_WEAVR_DLL]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'WEAVR_DLL']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '50990d83-faae-41b0-b48c-d3cc1414828c', url: 'https://tfs.txtgroup.com/tfs/TfsArv/WEAVR/_git/WEAVR_DLL']]])
                withCredentials([usernamePassword(credentialsId: '50990d83-faae-41b0-b48c-d3cc1414828c', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                    dir("WEAVR_DLL") {
                        bat "git.exe checkout ${params.BRANCH_WEAVR_DLL}"
                    }
                }
            }
        }
        
        stage ('WEAVR DLL Git Files Copy') {
            steps {
                bat "robocopy /move /e \"WEAVR_DLL\\.git\" \"Unity3DProject\\${WEAVR_BUILD}\\.git\" & EXIT /B 0"
                bat "copy /Y \"WEAVR_DLL\\.gitignore\" \"Unity3DProject\\${WEAVR_BUILD}\\.gitignore\" & EXIT /B 0"
            }
        }
        
        stage ('WEAVR DLL Push') {
            steps {
                
                /*script {
                    LAST_COMMIT_HASH = bat(returnStdout: true, script: "git.exe --git-dir=\"${WORKSPACE}\\Unity3DProject\\Assets\\WEAVR\\.git\" log --pretty=format:\"%%h - %%B\" -n 1").trim()
                }*/
                withCredentials([usernamePassword(credentialsId: '50990d83-faae-41b0-b48c-d3cc1414828c', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                    dir("Unity3DProject\\${WEAVR_BUILD}") {
                        
                        //bat "git.exe config --local credential.helper \"!p() { echo username=\\$GIT_USERNAME; echo password=\\$GIT_PASSWORD; }; p\""
                        
                        bat "git.exe add ."
                        //bat "git.exe commit -m \"Automatic Build from ${LAST_COMMIT_HASH}\""
                        bat "git.exe commit -m \"Automatic Build"
                        bat "git.exe push https://${GIT_USERNAME}:${GIT_PASSWORD}@tfs.txtgroup.com/tfs/TfsArv/WEAVR/_git/WEAVR_DLL"
                    }
                }
            }
        }
    }
    
    post {
        always {
            echo 'One way or another, I have finished'
        }
        success {
            echo 'I succeeeded!'
            //deleteDir() /* clean up our workspace */
        }
        unstable {
            echo 'I am unstable :/'
        }
        failure {
            echo 'I failed :('
        }
        changed {
            echo 'Things were different before...'
        }
    }
}